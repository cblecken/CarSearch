{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description" : "Cloud Formation script to get a setup for the car search app established initially. The 
   RDS database is pre-existing, the ES server is a EC2 instance. The beanstalk env is scaled to 2 instances
   with a load balancer. Missing is a securrity setup with a VPC",

  "Parameters" : {
    "ESAmi": {
      "Description" : "The AMI for the Elastic Search server",
      "Type": "String",
      "Default" : "ami-94b9eaec"
    },
    "KeyName": {
      "Description" : "The Key for this setupr",
      "Type": "String",
      "Default" : "SafeKeys"
    },
    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SSHLocation": {
      "Description": "Lockdown SSH access to the bastion host (default can be accessed from anywhere)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
    }
  },
  "Resources": {
   "EC2Instance" : {
      "Type" : "AWS::EC2::Instance", 
      "Properties" : {
        "KeyName" : { "Ref" : "KeyName" },
        "InstanceType" : { "Ref" : "InstanceType" },
        "ImageId" : {"Ref" : "ESAmi" },
        "SecurityGroups" : [{ "Ref" : "EC2SecurityGroup" }],
        "BlockDeviceMappings" : [
          {
            "DeviceName"  : "/dev/sdc",
            "VirtualName" : "ephemeral0"
          }
        ]
      }
    },

    "EC2SecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "SSH + HTTP access",
        "SecurityGroupIngress" : [
           { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation" }},
           { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : { "Ref" : "SSHLocation" }}
        ]
      }
     },
     "MyDB" : {
      "Type" : "AWS::RDS::DBInstance",
      "Properties" : {
        "DBName" : "MyDatabase",
        "AllocatedStorage" : "5",
        "DBInstanceClass" : "db.t2.small",
        "Engine" : "PostgresQL",
        "MasterUsername" : "myName",
        "MasterUserPassword" : "myPassword"
      },
      "DeletionPolicy" : "Snapshot"
    },


    "testApplication": {
      "Type": "AWS::ElasticBeanstalk::Application",
      "Properties": {
        "Description": "AWS Safe Demo App"
      }
    },
    "testApplicationVersion": {
      "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
      "Properties": {
        "ApplicationName": { "Ref": "testApplication" },
        "Description": "AWS Safe Demo App Version",
        "SourceBundle": {
          "S3Bucket": "ret.com",
          "S3Key": "safe-0.0.1-SNAPSHOT.jar"
        }
      }
    },
    "testConfigurationTemplate": {
      "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
      "Properties": {
        "ApplicationName": { "Ref": "testApplication" },
        "Description": "AWS Safe Demo App Configuration Template",
        "OptionSettings": [
          {
            "Namespace": "aws:autoscaling:asg",
            "OptionName": "MinSize",
            "Value": "2"
          },
          {
            "Namespace": "aws:autoscaling:asg",
            "OptionName": "MaxSize",
            "Value": "2"
          },
          {
            "Namespace": "aws:elasticbeanstalk:environment",
            "OptionName": "EnvironmentType",
            "Value": "LoadBalanced"
          }
        ],
        "SolutionStackName": "64bit Amazon Linux 2018.03 v2.7.2 running Java 8"
      }
    },
    "testEnvironment": {
      "Type": "AWS::ElasticBeanstalk::Environment",
      "Properties": {
        "ApplicationName": { "Ref": "testApplication" },
        "Description": "AWS Safe Demo App Environment",
        "TemplateName": { "Ref": "testConfigurationTemplate" },
        "VersionLabel": { "Ref": "testApplicationVersion" }
      }
    }
  },
  "Outputs" : {
    "Instance" : {
      "Value" : { "Fn::GetAtt" : [ "EC2Instance", "PublicDnsName" ] }, 
      "Description" : "DNS Name of the newly created EC2 instance"
    },
    "JDBCConnectionString": {
      "Description" : "JDBC connection string for the database",
      "Value" : { "Fn::Join": [ "", [ "jdbc:mysql://",
                                      { "Fn::GetAtt": [ "MyDB", "Endpoint.Address" ] },
                                      ":",
                                      { "Fn::GetAtt": [ "MyDB", "Endpoint.Port" ] },
                                      "/MyDatabase"]]}
    }
  }
 
}
